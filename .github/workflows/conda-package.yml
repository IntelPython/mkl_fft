name: Conda package

on: push

env:
  PACKAGE_NAME: mkl_fft
  MODULE_NAME: mkl_fft

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python: [3.9]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set pkgs_dirs
        run: |
          echo "pkgs_dirs: [~/.conda/pkgs]" >> ~/.condarc
      - name: Cache conda packages
        uses: actions/cache@v3
        env:
          CACHE_NUMBER: 0  # Increase to reset cache
        with:
          path: ~/.conda/pkgs
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-${{ matrix.python }}-${{hashFiles('**/meta.yaml') }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-${{ matrix.python }}-
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-

      - name: Add conda to system path
        run: echo $CONDA/bin >> $GITHUB_PATH
      - name: Install conda-build
        run: conda install conda-build
      - name: Build conda package
        run: |
          CHANNELS="-c intel -c main --override-channels"
          VERSIONS="--python ${{ matrix.python }}"
          TEST="--no-test"

          conda build \
            $TEST \
            $VERSIONS \
            $CHANNELS \
            conda-recipe
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PACKAGE_NAME }} ${{ runner.os }} Python ${{ matrix.python }}
          path: /usr/share/miniconda/conda-bld/linux-64/${{ env.PACKAGE_NAME }}-*.tar.bz2

  test:
    needs: build
    runs-on:  ${{ matrix.runner }}

    strategy:
      matrix:
        python: [3.9]
        experimental: [false]
        runner: [ubuntu-20.04]
    continue-on-error: ${{ matrix.experimental }}
    env:
      CHANNELS: -c intel -c main --override-channels

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.PACKAGE_NAME }} ${{ runner.os }} Python ${{ matrix.python }}
      - name: Add conda to system path
        run: echo $CONDA/bin >> $GITHUB_PATH
      - name: Install conda-build
        run: conda install conda-build
      - name: Create conda channel
        run: |
          mkdir -p $GITHUB_WORKSPACE/channel/linux-64
          mv ${PACKAGE_NAME}-*.tar.bz2 $GITHUB_WORKSPACE/channel/linux-64
          conda index $GITHUB_WORKSPACE/channel
          # Test channel
          conda search $PACKAGE_NAME -c $GITHUB_WORKSPACE/channel --override-channels

      - name: Collect dependencies
        run: |
          CHANNELS="-c $GITHUB_WORKSPACE/channel ${{ env.CHANNELS }}"
          conda create -n test_mkl_fft $PACKAGE_NAME python=${{ matrix.python }} $CHANNELS --only-deps --dry-run > lockfile
      - name: Display lockfile
        run: cat lockfile
      - name: Set pkgs_dirs
        run: |
          echo "pkgs_dirs: [~/.conda/pkgs]" >> ~/.condarc
      - name: Cache conda packages
        uses: actions/cache@v3
        env:
          CACHE_NUMBER: 0  # Increase to reset cache
        with:
          path: ~/.conda/pkgs
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-${{ matrix.python }}-${{hashFiles('lockfile') }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-python-${{ matrix.python }}-
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-

      - name: Install mkl_fft
        run: |
          CHANNELS="-c $GITHUB_WORKSPACE/channel ${{ env.CHANNELS }}"
          conda create -n test_mkl_fft python=${{ matrix.python }} "libffi>=3.4" $PACKAGE_NAME pytest $CHANNELS
          # Test installed packages
          conda list -n test_mkl_fft
      - name: Run tests
        run: |
          source $CONDA/etc/profile.d/conda.sh
          conda activate test_mkl_fft
          python -m pytest --pyargs $MODULE_NAME
